{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.38.33.27573",
      "templateHash": "13881753691671586199"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region"
      }
    },
    "swaName": {
      "type": "string",
      "defaultValue": "[format('swa-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Static Web App name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "func-xob7nugiarm7e202510300620",
      "metadata": {
        "description": "Application Insights name (existing)"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[format('kv{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Key Vault name (must be globally unique)"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Storage account for content and chat history"
      }
    },
    "openAiName": {
      "type": "string",
      "defaultValue": "[format('oai-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Azure OpenAI service name"
      }
    },
    "acsName": {
      "type": "string",
      "defaultValue": "[format('acs-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Azure Communication Services name"
      }
    },
    "aiSearchName": {
      "type": "string",
      "defaultValue": "[format('search-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Azure AI Search service name"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Function App name"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[format('plan-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Function App hosting plan name"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('swaName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Free",
        "tier": "Free"
      },
      "properties": {
        "repositoryToken": "",
        "allowConfigFileUpdates": true
      },
      "tags": {
        "azd-service-name": "web"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "networkAcls": {
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('openAiName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S0"
      },
      "kind": "OpenAI",
      "properties": {
        "customSubDomainName": "[parameters('openAiName')]",
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Communication/communicationServices",
      "apiVersion": "2023-04-01",
      "name": "[parameters('acsName')]",
      "location": "Global",
      "properties": {
        "dataLocation": "United States"
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2020-08-01",
      "name": "[parameters('aiSearchName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "basic"
      },
      "properties": {
        "hostingMode": "default",
        "networkRuleSet": {
          "ipRules": []
        },
        "publicNetworkAccess": "enabled",
        "replicaCount": 1,
        "partitionCount": 1
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "enableSoftDelete": true,
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "accessPolicies": [],
        "softDeleteRetentionInDays": 30,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "node|22",
          "appSettings": [
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~22"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1}', parameters('storageAccountName'), environment().suffixes.storage)]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').keys[0].value, environment().suffixes.storage)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "func-xob7nugiarm7e"
            },
            {
              "name": "AI_SEARCH_ENDPOINT",
              "value": "[format('https://{0}.search.windows.net', parameters('aiSearchName'))]"
            },
            {
              "name": "AI_SEARCH_API_KEY",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', parameters('aiSearchName')), '2020-08-01').primaryKey]"
            },
            {
              "name": "AI_SEARCH_INDEX",
              "value": "content"
            },
            {
              "name": "AI_ASSISTANT_SYSTEM_PROMPT",
              "value": "You are Your Gut Assistant, a helpful assistant for La Cura, a personal chef service focused on healing and wellness through Mediterranean nutrition. You are warm, knowledgeable, and supportive. Help users with questions about services, bookings, nutrition, and wellness. Be concise and friendly."
            },
            {
              "name": "AI_ASSISTANT_TONE",
              "value": "warm, supportive, knowledgeable"
            },
            {
              "name": "CALENDAR_OWNER_EMAIL",
              "value": "andrea@liveraltravel.com"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "OPENAI_ENDPOINT",
              "value": "[format('https://{0}.openai.azure.com', parameters('openAiName'))]"
            },
            {
              "name": "OPENAI_API_KEY",
              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]"
            },
            {
              "name": "OPENAI_DEPLOYMENT_NAME",
              "value": "gpt-4"
            }
          ]
        }
      },
      "tags": {
        "azd-service-name": "api"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', parameters('aiSearchName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "staticWebAppId": {
      "type": "string",
      "metadata": {
        "description": "Outputs"
      },
      "value": "[resourceId('Microsoft.Web/staticSites', parameters('swaName'))]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')), '2023-07-01').vaultUri]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "openAiEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').endpoint]"
    },
    "functionAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
    },
    "acsName": {
      "type": "string",
      "value": "[parameters('acsName')]"
    },
    "aiSearchEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.search.windows.net', parameters('aiSearchName'))]"
    }
  }
}